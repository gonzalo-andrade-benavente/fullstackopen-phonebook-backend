{"version":3,"sources":["components/Filter.js","services/phonebooks.js","components/PersonForm.js","components/Persons.js","components/Notificacion.js","App.js","index.js"],"names":["Filter","persons","setPersons","phonebookService","onChange","e","inputFilter","target","value","getAll","then","initialState","filter","p","name","includes","baseUrl","axios","get","res","data","create","newObject","post","deletePerson","id","delete","update","put","PersonForm","setSuccess","useState","newName","setNewName","newNumber","setNewNumber","type","onClick","preventDefault","newNameObject","number","length","newPerson","concat","setTimeout","window","confirm","person","find","personChange","updatePerson","map","Persons","personeDelete","newPersons","Notification","message","className","App","success","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f59f6458.chunk.js","sourcesContent":["\nconst Filter = ( { persons, setPersons, phonebookService} ) => {\n \n    const handleFilter = (e) => {\n        const inputFilter = e.target.value;\n\n        phonebookService\n          .getAll()\n          .then( initialState => { \n            setPersons( initialState.filter( p => p.name.includes(inputFilter) ) ) \n          });\n\n        //const personsFilter = persons.filter( p => p.name.includes(inputFilter) );\n        //setPersons(personsFilter);\n        \n    }\n\n    return(\n     <div>\n        filter shown with <input onChange={handleFilter} />\n      </div>\n    )\n\n}\n\nexport default Filter;","import axios from 'axios';\n\n//const baseUrl = 'http://localhost:3001/persons'; -- json-server\n//const baseUrl = 'http://localhost:3001/api/persons';\n//const baseUrl = 'http://shielded-tundra-54025.herokuapp.com/api/persons';\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n    const req = axios.get(baseUrl);\n    return req.then(res => res.data);\n}\n\nconst create = ( newObject ) => {\n    const req = axios.post(baseUrl, newObject);\n    return req.then(res => res.data);\n}\n\nconst deletePerson = ( id ) => {\n    const req = axios.delete(`${baseUrl}/${id}`);\n    return req.then(res => res.data);\n}\n\nconst update = ( id, newObject  ) => {\n    const req = axios.put(`${baseUrl}/${id}`, newObject);\n    return req.then(res => res.data);\n}\n\n\nexport default { getAll, create, deletePerson, update }","import { useState } from \"react\";\nimport phonebookService from '../services/phonebooks';\n\nconst PersonForm = ({ persons, setPersons, setSuccess } ) => {\n\n    //console.log(setSuccess);\n\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n\n    const changeName = (e) => {\n        setNewName(e.target.value);\n    };\n\n    const changeNumber = (e) => {\n        setNewNumber(e.target.value);\n    }\n\n    const handleNote = (e) => {\n        e.preventDefault();\n\n        //if ( newName === \"\" ) return 1;\n\n        const newNameObject = {\n            name: newName,\n            number: newNumber\n        };\n\n        const exists = persons.filter(p => p.name === newName);\n\n        if (exists.length === 0) {\n\n            phonebookService\n                .create(newNameObject)\n                .then( newPerson => {\n                    setPersons(persons.concat(newPerson));\n                    setNewName('');\n                    setNewNumber('');\n                    setSuccess(`Added ${ newName }`);\n                    setTimeout( () => {\n                        setSuccess(null);\n                    }, 3000);\n                });\n\n        } else {\n            // alert(`${newName} is already added to phonebook`);\n            const result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`);\n        \n            if ( result ) {\n                const person = persons.find(p => p.name === newName);\n                const personChange = { ...person, number: newNumber };\n                \n                phonebookService\n                    .update(person.id, personChange)\n                    .then( updatePerson => {\n                        setPersons( persons.map( p => p.id === person.id ? updatePerson : p) );\n                    });\n            } \n        }\n\n    }\n    return (\n\n        <div>\n            <form>\n                <div>\n                    name: <input value={newName} onChange={changeName} />\n                </div>\n\n                <div>\n                    number: <input value={newNumber} onChange={changeNumber} />\n                </div>\n\n                <div>\n                    <button type=\"submit\" onClick={handleNote} >add</button>\n                </div>\n            </form>\n        </div>\n\n\n    )\n\n\n}\n\nexport default PersonForm;","import phonebookService from '../services/phonebooks';\n\nconst Persons = ( {persons, setPersons } ) => {\n\n    const handleDelete = (name, id) => {\n        const result = window.confirm(` Delete ${name}?`);\n\n        if ( result ) {\n            phonebookService\n                .deletePerson(id)\n                .then( personeDelete => { \n                    const newPersons = persons.filter( p => p.id !== id );\n                    setPersons(newPersons);\n                });   \n        } \n    }\n\n    return (\n        <div>\n            {\n                persons.map((p) => <div key={p.id}> {p.name} {p.number} <button onClick={ () => handleDelete(p.name, p.id) }> delete </button> </div>)\n            }\n\n        </div>\n\n    )\n\n\n}\n\nexport default Persons;","\nconst Notification = ( { message } ) => {\n\n    if ( message ===  null) {\n        return null\n    }\n\n    return(\n        <div className=\"success\">\n            { message }\n        </div>\n    )\n\n\n}\n\nexport default Notification;","import { useEffect, useState } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport './index.css';\nimport Notification from \"./components/Notificacion\";\n\nimport phonebookService from './services/phonebooks';\n\nfunction App() {\n\n  const [persons, setPersons] = useState([]);\n  const [success, setSuccess] = useState(null);\n\n  useEffect(() => {\n\n    phonebookService\n      .getAll()\n      .then( initialState => { setPersons( initialState ) });\n\n  }, []);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      \n      <Notification message={success}/>\n\n      <Filter persons={persons} setPersons={setPersons} phonebookService={phonebookService} />\n\n      <h3>Add a <b>new</b></h3>\n\n      <PersonForm persons={persons} setPersons={setPersons} setSuccess={setSuccess}/>\n      \n      <h2>Numbers</h2>\n\n      <Persons persons={persons} setPersons={setPersons} />\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}